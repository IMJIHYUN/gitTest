<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!-- 11월 15일 화요일-->
<!-- Bean(객체) 등록 시 생성자를 통한 값 주입 설정 -->
	<!-- 
		객체 생성 설정-bean등록
		<bean>태그를 사용해서, 이 태그의 속성으로 name or id로 등록한다. -> bean 식별값으로 쓰이고, 다른 bean 설정 getBean()에서 호출할 때 이 id/name으로 호출된다.
		name/id는 중복이 되면 안 된다.
		class 속성은 객체를 생성할 클래스의 이름으로 전체 이름으로 넣어줘야 한다. 패키지명.클래스명 
		
	 -->
	 <!--(+덤) 리터럴 값 - 그 자체가 값인 것들! 'ㅅ' 객체는 값은 아니고, 그 안에 있는 인스턴스가 값이니까 객체는 리터럴은 아님 -->
	 <!-- 
	 	생성자를 통해 값을 주입.
	 	1.<constructor-arg> 사용 -Literal값(Primitive type & String(reference type))을 주입하도록 설정
	 		1-1.constructor-arg의 하위 태그<value>로 값 설정하기
	 		        하위 태그 <ref bean="bean식별값"/>-기존 <bean>으로 생성된 객체를 설정.
	 		1-2.constructor-arg태그의 속성 value로 값 설정하기
	 		                                                    속성인 ref="bean 식별값" - 기존<bean>으로 생성된 객체를 설정
	 	2.<bean>태그의 속성으로 설정 -> c namespaces를 꼭 추가해야한다. spring으로 설정할 수 있는게 너무 많으니까 내가 필요할 때만 설정을 등록한 다음 쓴다.
	 		c:생성자의 매개변수명 = "값" -Literal값 설정
	 		c:생성자 매개변수명-ref="bean 식별값" -기존 <bean>으로 생성된 객체를 설정.	 	
	 		
	  -->
	 
<!-- 생성자에 대한 설정이 없으므로 매개변수가 없는 생성자를 호출한 것  new Address(); -->
  <bean name="address1" class="spring.di.vo.Address"/> <!-- 플러그인 설치를 통해서 클래스 이름으로 자동완성 가능 -->

<!-- 객체 생성 시 생성자에 값을 주입(전달) 크게 3가지 방식이 있음-->

<!-- 생성자에 매개변수 전달 방식 1 : 상황에 따라서 사용함(참조관계의 경우) -->
<!-- new Address("111-111","서울시 송파구")  -->
<bean name="address2" class="spring.di.vo.Address">
	<constructor-arg> <!-- 매개변수에 전달할 값 1개 설정- constructor-arg -->
		<value>111-111</value>
	</constructor-arg>
	<constructor-arg> <!-- 매개변수에 전달할 값 1개 설정- constructor-arg -->
		<value >서울시 송파구</value>
	</constructor-arg>
</bean>

<!-- 생성자에 매개변수 전달 방식2 -->
<!-- new Address("222-222","경기도 성남시 분당구") -->
<bean name="address3" class="spring.di.vo.Address">
	<constructor-arg value="222-222"/> <!-- 여기가 int거나 뭐거나 다 상관없이 String으로 받아서 변수의 타입에 맞게 들어가게 된다! 알아서 변환된다. -->
	<constructor-arg value="경기도 성남시 분당구"/>
</bean>

<!-- 생성자에 매개변수 전달 방식3 -->
<!-- Namespaces -> c: 이거 체크박스 체크하고 okay 하면! 맨 위에 생긴다 import 
	(이 경로에 태그나 속성에 대한 정의가 되어있다.)
	  bean 태그 안에 속성으로 constructor-arg의 값을 넣어주기 위해서 해줘야 한다.
 -->
<!-- new Address("333-333","경기도 수원시 매탄동") -->
<bean name="address4" class="spring.di.vo.Address" c:address="경기도 수원시 매탄동" c:zigcode="333-333"/>

<!-- Person 객체 생성 -->
<bean name="person1" class="spring.di.vo.Person" c:name="김영수" c:age="20" c:weight="70.5"/>
<!-- 11월 16일 수요일-->
<!-- type을 지정하는 것 배움 -->
<!-- 매개변수의 개수가 같고, String이 있으면 String이 있는 생성자가 우선된다! -->
<bean name="person2" class="spring.di.vo.Person" c:age="25" c:weight="50.0"/> <!--얘는 원래 String으로 일단 넘어간다!! 그리고, 타입을 명시적으로 알려주기-->

<bean name="person3" class="spring.di.vo.Person">
	<constructor-arg value="30" type="int"/>
	<constructor-arg value="80.5" type="double"/>
</bean>

<!-- 객체를 생성자의 매개변수로 넘겨줄 때 리터럴과 형태가 다르다!-->
<!-- Address address=new Address("우편번호","주소");
	 Person person=new Person("이름",나이,몸무게,address);
 -->
 <bean name="person4" class="spring.di.vo.Person">
 	<constructor-arg value="이철수"/>
 	<constructor-arg value="30"/>
 	<constructor-arg type="double" value="65.7"/>
  	<constructor-arg ref="address2"></constructor-arg> 
  </bean> 	
 <bean name="person5" class="spring.di.vo.Person">
  	<constructor-arg>
 		<ref bean="address3"></ref>
 		<!-- <value>address3</value>  이렇게 쓰면 문자열을 넣는거라서 앙댕 -->
 	</constructor-arg> 
 </bean>
 <bean name="person6" class="spring.di.vo.Person" c:name="길라임" c:age="25" c:weight="48.0" c:address-ref="address4"></bean>
 <!-- c:address="address4" <-이렇게 하면 이거 ㅋㅋㅋ string으로 넘어가서 ref를 붙여야 돼 -->
 
 <!-- Person p=new Person("이름",나이,몸무게, new Address()) 이런 방식으로 객체 만들기!-->
 <!--  이때의 new Address()는 넣어주기만 하고 딱히 다른 곳에서 쓰지 않아서 걍 생성으로 넣어줌-->
 <bean name="person7" class="spring.di.vo.Person">
 	<constructor-arg value="박명수"/>
 	<constructor-arg value="45"/>
 	<constructor-arg type="double" value="70.1"/>
 	<constructor-arg>
 		<bean class="spring.di.vo.Address" c:zigcode="777-777" c:address="서울시 동대문구"></bean><!-- name은 참조형이 아니라 필요없다 -->
 	</constructor-arg>
 </bean>
 <!-- c:는 생성자를 만드는 태그!! -->
</beans>






















