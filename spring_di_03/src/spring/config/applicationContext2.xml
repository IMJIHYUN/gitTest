<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!-- 
	setter 메소드를 통한 값 주입(전달) 
	(property(instance변수를 객체의 속성, property라고 말 해! 근데, setter/getter를 포함해서 property라고 함)를 통한 주입)
	1. <bean>의 하위태그 <property>를 이용
	  <property> name 속성에 property 명을 설정(setter에서 set빼고 첫글자를 소문자로 쓰기)
	  값 : 하위태그 이용 -<value> or <ref>
	  속성: value속성, ref속성
	2. <bean>의 속성 이용 -p 네임스페이스를 설정파일에 추가해야한다.
	 p:property명="리터럴값" , p:property명-ref="bean식별자"  
-->

<!-- 1. setter property 태그 -->
<bean name="address1" class="spring.di.vo.Address">
<!-- address.setZipcode("888-888"); -->
	<property  name="zigcode">
		<value>888-888</value>
	</property>
	<!-- address1.setAddress("경기도 안양시") -->
	<property name="address" value="경기도 안양시"/>
</bean>

<!-- Namespaces에서 P를 추가하면 bean 태그에 속성으로 p: <-이거 사용 가능하다.  -->
<bean name="address2" class="spring.di.vo.Address" p:zigcode="999-999" p:address="수원시 영통구"/>

<!-- new Person() ; name,age,weight -setter로 주입하기 -->
<bean name="person1" class="spring.di.vo.Person" p:name="김영희" p:age="26" p:weight="48.6"></bean>

<bean name="person2" class="spring.di.vo.Person" p:weight="70.6" p:address-ref="address1">
	<property name="name"> <!-- setter 메서드 부르는거!! -->
		<value>박철우</value>
	</property>
	<property name="age" value="20"/> <!-- setter메서드로 접근하니까 type을 설정하지 않아도 된다. -->
	<!-- <property name="address">
		<ref bean="address1"></ref>
	</property> -->
	<!-- <property name="address" ref="address2"/> --> <!-- namespace에서 p추가해서 자동으로 ref에서 자동완성 된다. -->
</bean>
</beans>

























